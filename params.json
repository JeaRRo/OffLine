{
  "name": "OffLine",
  "tagline": "Installer un serveur d'imagerie",
  "body": "# Installation d'un serveur d'imagerie\r\n\r\nUn serveur web local avec une réplication des tuiles d'imagerie Bing pour la zone de travail semble suffisant pour les Mapathons Missing-Maps dans des locaux ayant un wifi à faible débit.\r\n\r\nInstallation d'un serveur de test dans une machine virtuelle (Virtualbox sous Linux). La prochaine étape sera de porter cette installation sur un RaspBerry Pi.\r\n\r\n\r\n## Installation Ubuntu server 14.04.05 LTS\r\n\r\n### Caractéristiques de la machine :\r\n\r\n* Ubuntu 14.04.05 LTS 64 bits\r\n* Mémoire vive 2048Mo\r\n* DD 40Go\r\n* Carte réseau par pont sur l'interface eth0 de l'hôte. Configuration Dhcp\r\n\r\nUser : osm. Ajout accès ssh par clé. Configuration vim : colorscheme evening. \r\n\r\n\r\n##Installation paquets de base, NodeJS, Tessera, Nginx\r\n\r\n###Paquets complémentaires de base\r\n```\r\n sudo aptitude install avahi-daemon avahi-autoipd ca-certificates curl moreutils virt-what default-jre-headless git\r\n sudo curl -L https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 -o /usr/local/bin/jq\r\n sudo chmod +x /usr/local/bin/jq\r\n```\r\n###Node_Js\r\n\r\n``` \r\nsudo apt-get install --no-install-recommends -y \r\nsudo npm install -g npm@3\r\nsudo npm install -g interp \r\n```\r\n###Tessera\r\n\r\n``` \r\nsudo  add-apt-repository -y ppa:ubuntu-toolchain-r/test\r\nsudo apt-get update\r\nsudo apt-get install -y libstdc++6\r\nsudo npm install -g mapnik mbtiles tilelive tilelive-mapnik tilelive-carto tilelive-tmstyle \\\r\n       tilelive-tmsource tilelive-file tilelive-http tilelive-mapbox tilejson tilelive-vector \\\r\n       tilelive-blend tessera tl \r\n```\r\n\r\n_Tous ces paquets ne sont sans doute pas nécessaires… il faudrait tester avec juste :_\r\n```\r\n  sudo npm -g tl tilelive tilejson tilelive-http mbtiles tessera\r\n```\r\n###Nginx\r\n\r\n `sudo aptitude install nginx`\r\n \r\n##Configuration Tessera\r\n\r\n###Télécharger une bbox sur Bing\r\n\r\nbbox = “minX minY maxX maxY”. On peut utiliser http://bboxfinder.com/ pour définir la bbox mais attention le résultat utilise des virgules en séparateur. ( A supprimer dans la requete ) Dessiner un rectangle sur la zone choisie, sélectionner EPSG 4326 - WGS84, et l'ordre Lng-Lat pour le format puis copier le résultat.\r\n\r\n```\r\nmkdir data\r\ncd data`\r\ntl copy -z 1 -Z 5 -b \"-109.940186 38.406254 -107.561646 39.766325\" \"http://`ecn.t0.tiles.virtualearth.net/tiles/a{q}.jpeg?g=587&mkt=en-us&n=z\" mbtiles://./bing.mbtiles\r\n``` \r\nUn test sur une zone plus importante avec une plage de zoom plus grande : **Attention 33Mo de tuiles**\r\n\r\n```\r\ntl copy -z 16 -Z 19 -b \"5.340514 45.950135 5.360298 45.962129\" \"http://ecn.t0.tiles.virtualearth.net/tiles/a{q}.png?g=5388\" mbtiles://./amberieu.mbtiles\r\n```\r\n###Vérifier le téléchargement\r\n\r\n  `tessera mbtiles://./bing.mbtiles`\r\nCtrl-C pour arreter\r\n\r\nOuvrir un navigateur **http://IP_server:8080/** \r\n\r\n###Configurer le serveur Tessera\r\n\r\n  `sudo mkdir -p /etc/tessera.conf.d `\r\n\r\nCreer le fichier /etc/tessera.conf.d/bing.json et reporter le nom du fichier que vous venez de télécharger.\r\n\r\n```\r\n# tessera\r\ndescription     \"Tessera Tile Server (Node.js)\"\r\n\r\nstart on (local-filesystems and net-device-up and runlevel [2345])\r\nstop on shutdown\r\n\r\nenv PORT=\"8082\"\r\nenv TESSERA_OPTS=\"--config /etc/tessera.conf.d -C 100\"\r\n\r\nrespawn\r\n#respawn limit 5 60\r\n\r\npre-start script\r\n    if [ -z \"$TESSERA_OPTS\" ]; then\r\n      exit 1\r\n    fi\r\n    echo \"[`date '+%c'`] Starting: tessera\" >> /var/log/tessera.log\r\nend script\r\n\r\npre-stop script\r\n    echo \"[`date '+%c'`] Stopping: tessera\" >> /var/log/tessera.log\r\nend script\r\n\r\nexec start-stop-daemon \\\r\n\t\t--start \\\r\n\t\t--chdir /home/osm \\\r\n\t\t--chuid osm \\\r\n\t\t--make-pidfile \\\r\n\t\t--pidfile /var/run/tessera.pid \\\r\n                --exec /usr/bin/tessera -- >> /var/log/tessera.log 2>&1\r\n\r\n```\r\n###Relancer Tessera\r\n `sudo service tessera restart`\r\n\r\n###Vérifications\r\n\r\nNormalement la commande `ps ax|grep tessera` devrait répondre quelque chose comme :\r\n \r\n`17471 ?        Ssl    0:03 node /usr/bin/tessera`\r\n\r\net un `tail -f var/log/tessera` devrait lister les accès au tuiles quand vous accéder avec un navigateur à l'adresse  http://IP_serveur:8082/tiles/bing\r\n\r\n##Configurer Nginx\r\n\r\nEditer le fichier /etc/nginx/sites-available/default\r\n```\r\nserver {\r\n\tlisten 80 default_server;\r\n\r\n\troot /usr/share/nginx/html;\r\n        proxy_buffering off;\r\n        proxy_http_version 1.1;\r\n        proxy_set_header Host $host;\r\n\r\n\tserver_name localhost rebing rebing.io 172.16.0.33;\r\n\r\n\tlocation / {\r\n\t\ttry_files $uri $uri/ =404;\r\n                index index.html;\r\n\r\n\t}\r\n        location /tiles {\r\n\t\tproxy_pass http://127.0.0.1:8082;\r\n        }\r\n\r\n\tlocation ~ /\\.ht {\r\n\t\tdeny all;\r\n\t}\r\n}\r\n```\r\nSauvegarder et relancer le serveur Nginx\r\n\r\n `sudo service nginx restart`\r\n\r\n###Vérifications\r\n\r\nLes tuiles devraient être visibles sur l'adresse http://IP_server/tiles/bing\r\n\r\nSinon chercher des erreurs dans /var/log/nginx/error.log \r\n\r\nPendant la navigation, on peut visualiser les accès avec un `tail -f /var/log/nginx/access.log`\r\n\r\n##Configurer ID pour afficher les tuiles\r\n\r\ndans ID, il faut ajouter un fond personnalisé : http://IP_server/tiles/bing/{z}/{x}/{y}.png",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}